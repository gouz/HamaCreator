const e=document.querySelector("#mockup"),t=e.getContext("2d"),n=document.createElement("img"),l=document.querySelector("#temp"),o=l.getContext("2d"),r=document.querySelector("#horizontal"),a=document.querySelector("#vertical");let i=1,s=1,c=[],d={},h={};const p=document.querySelector("#palette"),u=document.querySelector("#spinner"),g=document.querySelector("#instructions");let y;fetch("./list.json").then((e=>e.json())).then((e=>{p.innerHTML="";for(let t=0;t<e.palette.length;t++)d[e.palette[t].color]=e.palette[t],d[e.palette[t].color].code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-*/$!?".charAt(t),c.push(e.palette[t].color),p.innerHTML+=`\n        <label title="${e.palette[t].label}">\n          <input class="color-picked" type="checkbox" value="${e.palette[t].color}" checked />\n          <span class="border">\n            <span class="color" style="background-color: ${e.palette[t].color};"></span>\n            <span class="number">${e.palette[t].num}</span>\n            </span>\n          <span class="sr-only">${e.palette[t].label}</span>\n        </label>\n      `;document.querySelectorAll(".color-picked").forEach((e=>{e.addEventListener("click",(()=>{e.checked?c.push(e.value):c.splice(c.indexOf(e.value),1),b(),v()}),!1)}))}));const f=e=>{let t=768,n=c[0];for(let l=0;l<c.length;l++){let o=0;for(let t=0;t<3;t++)o+=Math.abs(e[t]-parseInt(c[l].substring(2*t+1,2*t+3),16));o<t&&(t=o,n=c[l])}return n},m=()=>{i>s?(e.width=580,e.height=580*s/i):(e.width=580*i/s,e.height=580),g.innerHTML=""},b=()=>{if(c.length){y="",h={};for(let e=0;e<l.height;e++){for(let n=0;n<l.width;n++){const l=o.getImageData(n,e,1,1).data;if(0!=l[3]){t.beginPath();let o=i;s>i&&(o=s),t.arc((10+20*n)/o,(10+20*e)/o,8/o,0,2*Math.PI),t.lineWidth=5/o;const r=f(l);t.strokeStyle=r,void 0===h[r]&&(h[r]=0),h[r]++,y+=`<i style="color: ${d[r].color}">${d[r].code}</i>`,t.stroke()}else y+="&nbsp;"}y+="<br />"}}else alert("Pas de coloris sélectionné")},v=()=>{if(""!=y){let e=[],t=0;for(const n in h)e.push(`(${d[n].num}) ${d[n].label} [<span class="key" style="color: ${d[n].color}">${d[n].code}</span>] : ${h[n]}`),t+=h[n];e.sort(),g.innerHTML=`\n      <p>Nombre de perles à utiliser (${t})</p>\n      <ul>\n        <li>${e.join("</li><li>")}</li>\n      </ul>\n      <p>Instructions</p>\n      <p class="key">${y}</p>\n    `}else g.innerHTML=""};n.addEventListener("load",(()=>{t.clearRect(0,0,e.width,e.height),o.clearRect(0,0,l.width,l.height),(()=>{l.width=29*i,l.height=29*s;let e=n.width,t=n.height;t*=l.width/e,e=l.width,t>l.height&&(e*=l.height/t,t=l.height),o.drawImage(n,0,0,n.width,n.height,(l.width-e)/2,(l.height-t)/2,e,t)})(),b(),v(),u.style.display="none"}),!1),e.addEventListener("dragover",(e=>{e.preventDefault()}),!1),e.addEventListener("drop",(e=>{const t=e.dataTransfer.files;if(t.length>0){const e=t[0];if("undefined"!=typeof FileReader&&-1!=e.type.indexOf("image")){g.innerHTML="",u.style.display="block";const t=new FileReader;t.onload=e=>{n.src=e.target.result},t.readAsDataURL(e)}}e.preventDefault()}),!1),r.addEventListener("input",(()=>{i=r.value,m()}),!1),a.addEventListener("input",(()=>{s=a.value,m()}),!1);